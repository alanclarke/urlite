apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  annotations:
    kube-ci.qutics.com/cacheScope: project
    kube-ci.qutics.com/cacheSize: 20Gi
  creationTimestamp: null
spec:
  arguments: {}
  entrypoint: run
  templates:
  - inputs: {}
    metadata: {}
    name: main
    outputs: {}
    steps:
    - - arguments: {}
        name: run
        template: run
        when: '{{workflow.parameters.branch}} != "gh-pages"'
  - container:
      args:
      - sh
      - -c
      - |
        set -x
        set -e

        cp /.ci-secrets/npmrc $HOME/.npmrc
        export XDG_CACHE_HOME=/cache/.cache
        export CYPRESS_CACHE_FOLDER=/cache/.cache
        npm set cache /cache/npm
        PATH=$PATH:$(pwd)/node_modules/.bin

        npm i
        npm run lint
        npm run coverage
        npm run test-ci
      command:
      - docker-entrypoint.sh
      env:
      - name: SAUCE_USERNAME
        valueFrom:
          secretKeyRef:
            key: SAUCE_USERNAME
            name: ci-secrets
      - name: SAUCE_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            key: SAUCE_ACCESS_KEY
            name: ci-secrets
      image: eu.gcr.io/qubit-registry/tools/node12chrome:latest
      name: ""
      resources: {}
      volumeMounts:
      - mountPath: /.ci-secrets
        name: secrets
      - mountPath: /cache
        name: build-cache
      workingDir: /src
    inputs:
      artifacts:
      - git:
          repo: '{{workflow.parameters.repo}}'
          revision: '{{workflow.parameters.revision}}'
          sshPrivateKeySecret:
            key: ssh-private-key
            name: ci-secrets
        name: code
        path: /src
    metadata: {}
    name: run
    outputs: {}
  volumes:
  - name: secrets
    secret:
      secretName: ci-secrets
  - name: build-cache
    persistentVolumeClaim:
      claimName: '{{workflow.parameters.cacheVolumeClaimName}}'
status:
  finishedAt: null
  startedAt: null
